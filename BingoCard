package bingo;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class BingoCard {
	private BingoTile[][] tiles = new BingoTile[5][5];

    public BingoCard() {
        generateTiles();
    }

    private void generateTiles() {
        for (int row = 0; row < 5; row++) {
            List<Integer> existingNumbers = new ArrayList<>(5);
            for (int col = 0; col < 5; col++) {
                if(row == 2 && col == 2) {
                    BingoTile tile = new BingoTile(1);//-1? 
                    tile.setCrossedOff(true);
                    tiles[2][2] = tile;
                    continue;
                }
                int number;
                do {
                    number = getWithinRange(row);
                } while (existingNumbers.contains(number));
                existingNumbers.add(number);
                BingoTile tile = new BingoTile(number);
                tiles[row][col] = tile;
            }
        }
    }

    private static Random random;

    public static void createRandom(long seed) {
        random = new Random(seed);
    }

    private static int getWithinRange(int row) {
        int number = random.nextInt(15) + 1;
        return number + (row * 15);
    }

    public BingoTile getTile(int x, int y) {
        return tiles[x][y];
    }
    
    public void setTileFor(int number) {
        int x = number / 15;
        for (int i = 0; i < 5; i++) {
            if (tiles[x][i].getValue() == number) {
                tiles[x][i].setCrossedOff(true);
                break;
            }
        }
    }
    
    public int callBall() {
    	List<Integer> existNum = new ArrayList<>(5);
        int num;
        
        do {
        	num = random.nextInt(75) + 1;
        } while(existNum.contains(Integer.valueOf(num)));
        existNum.add(Integer.valueOf(num));
        	return num;
    }
    


    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        for(int row = 0; row < 5; row++){
            for (int col = 0; col < 5; col++) {
                builder.append(tiles[row][col].getValue()).append('\t');
            }
            builder.append('\n');
        }
        return builder.toString();
    }
}
